//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  USER
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())

  // ðŸ‘‡ Correct relation field (must match "createdBy" on Product)
  products  Product[] @relation("UserCreatedProducts")

  @@allow('all', auth() != null)
  @@allow('create', true)
  @@allow('read', auth().role == 'ADMIN' || auth().id == id)
  @@allow('update', auth().role == 'ADMIN' || auth().id == id)
  @@allow('delete', auth().role == 'ADMIN')
}

model Product {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  price       Float
  sku         String
  inStock     Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // ðŸ‘‡ Use same relation name and reference the user
  createdBy   User?    @relation("UserCreatedProducts", fields: [createdById], references: [id])
  createdById String?

  @@allow('read', true)
  @@allow('create', auth() != null)
  @@allow('update', auth().id == createdById || auth().role == ADMIN)
  @@allow('delete', auth().id == createdById || auth().role == ADMIN)
}

